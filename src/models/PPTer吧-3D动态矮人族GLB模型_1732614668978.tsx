/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 E:\testProject\liveModel\public\uploads\models\PPTer吧-3D动态矮人族GLB模型_1732614668978.glb -t -o E:\testProject\liveModel\src\models\PPTer吧-3D动态矮人族GLB模型_1732614668978.tsx 
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type ActionName = 'dance' | 'walk' | 'run' | 'jump' | 'idle'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Cute_Troll2: THREE.SkinnedMesh
    Jt_root4: THREE.Bone
  }
  materials: {}
  animations: GLTFAction[]
}

export function Model_1732614668978(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null)
  const { scene, animations } = useGLTF('/uploads/models/glb/PPTer吧-3D动态矮人族GLB模型_1732614668978.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="RootNode0" scale={0.01}>
          <group name="geo1">
            <skinnedMesh name="Cute_Troll2" geometry={nodes.Cute_Troll2.geometry} material={nodes.Cute_Troll2.material} skeleton={nodes.Cute_Troll2.skeleton} />
          </group>
          <group name="skeletal3">
            <primitive object={nodes.Jt_root4} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/uploads/models/glb/PPTer吧-3D动态矮人族GLB模型_1732614668978.glb')
